/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as CheckoutImport } from './routes/checkout'
import { Route as AccountImport } from './routes/_account'
import { Route as IndexImport } from './routes/index'
import { Route as ProductsProductIdImport } from './routes/products/$productId'
import { Route as PagesPageIdImport } from './routes/pages/$pageId'
import { Route as CategoryCategoryIdImport } from './routes/category/$categoryId'
import { Route as AccountWishlistImport } from './routes/_account/wishlist'
import { Route as AccountOrderHistoryImport } from './routes/_account/order-history'
import { Route as AccountAddressImport } from './routes/_account/address'
import { Route as AccountAccountImport } from './routes/_account/account'
import { Route as AccountOrdersOrderIdImport } from './routes/_account/orders/$orderId'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const CheckoutRoute = CheckoutImport.update({
  id: '/checkout',
  path: '/checkout',
  getParentRoute: () => rootRoute,
} as any)

const AccountRoute = AccountImport.update({
  id: '/_account',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProductsProductIdRoute = ProductsProductIdImport.update({
  id: '/products/$productId',
  path: '/products/$productId',
  getParentRoute: () => rootRoute,
} as any)

const PagesPageIdRoute = PagesPageIdImport.update({
  id: '/pages/$pageId',
  path: '/pages/$pageId',
  getParentRoute: () => rootRoute,
} as any)

const CategoryCategoryIdRoute = CategoryCategoryIdImport.update({
  id: '/category/$categoryId',
  path: '/category/$categoryId',
  getParentRoute: () => rootRoute,
} as any)

const AccountWishlistRoute = AccountWishlistImport.update({
  id: '/wishlist',
  path: '/wishlist',
  getParentRoute: () => AccountRoute,
} as any)

const AccountOrderHistoryRoute = AccountOrderHistoryImport.update({
  id: '/order-history',
  path: '/order-history',
  getParentRoute: () => AccountRoute,
} as any)

const AccountAddressRoute = AccountAddressImport.update({
  id: '/address',
  path: '/address',
  getParentRoute: () => AccountRoute,
} as any)

const AccountAccountRoute = AccountAccountImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => AccountRoute,
} as any)

const AccountOrdersOrderIdRoute = AccountOrdersOrderIdImport.update({
  id: '/orders/$orderId',
  path: '/orders/$orderId',
  getParentRoute: () => AccountRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_account': {
      id: '/_account'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AccountImport
      parentRoute: typeof rootRoute
    }
    '/checkout': {
      id: '/checkout'
      path: '/checkout'
      fullPath: '/checkout'
      preLoaderRoute: typeof CheckoutImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_account/account': {
      id: '/_account/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AccountAccountImport
      parentRoute: typeof AccountImport
    }
    '/_account/address': {
      id: '/_account/address'
      path: '/address'
      fullPath: '/address'
      preLoaderRoute: typeof AccountAddressImport
      parentRoute: typeof AccountImport
    }
    '/_account/order-history': {
      id: '/_account/order-history'
      path: '/order-history'
      fullPath: '/order-history'
      preLoaderRoute: typeof AccountOrderHistoryImport
      parentRoute: typeof AccountImport
    }
    '/_account/wishlist': {
      id: '/_account/wishlist'
      path: '/wishlist'
      fullPath: '/wishlist'
      preLoaderRoute: typeof AccountWishlistImport
      parentRoute: typeof AccountImport
    }
    '/category/$categoryId': {
      id: '/category/$categoryId'
      path: '/category/$categoryId'
      fullPath: '/category/$categoryId'
      preLoaderRoute: typeof CategoryCategoryIdImport
      parentRoute: typeof rootRoute
    }
    '/pages/$pageId': {
      id: '/pages/$pageId'
      path: '/pages/$pageId'
      fullPath: '/pages/$pageId'
      preLoaderRoute: typeof PagesPageIdImport
      parentRoute: typeof rootRoute
    }
    '/products/$productId': {
      id: '/products/$productId'
      path: '/products/$productId'
      fullPath: '/products/$productId'
      preLoaderRoute: typeof ProductsProductIdImport
      parentRoute: typeof rootRoute
    }
    '/_account/orders/$orderId': {
      id: '/_account/orders/$orderId'
      path: '/orders/$orderId'
      fullPath: '/orders/$orderId'
      preLoaderRoute: typeof AccountOrdersOrderIdImport
      parentRoute: typeof AccountImport
    }
  }
}

// Create and export the route tree

interface AccountRouteChildren {
  AccountAccountRoute: typeof AccountAccountRoute
  AccountAddressRoute: typeof AccountAddressRoute
  AccountOrderHistoryRoute: typeof AccountOrderHistoryRoute
  AccountWishlistRoute: typeof AccountWishlistRoute
  AccountOrdersOrderIdRoute: typeof AccountOrdersOrderIdRoute
}

const AccountRouteChildren: AccountRouteChildren = {
  AccountAccountRoute: AccountAccountRoute,
  AccountAddressRoute: AccountAddressRoute,
  AccountOrderHistoryRoute: AccountOrderHistoryRoute,
  AccountWishlistRoute: AccountWishlistRoute,
  AccountOrdersOrderIdRoute: AccountOrdersOrderIdRoute,
}

const AccountRouteWithChildren =
  AccountRoute._addFileChildren(AccountRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AccountRouteWithChildren
  '/checkout': typeof CheckoutRoute
  '/login': typeof LoginRoute
  '/account': typeof AccountAccountRoute
  '/address': typeof AccountAddressRoute
  '/order-history': typeof AccountOrderHistoryRoute
  '/wishlist': typeof AccountWishlistRoute
  '/category/$categoryId': typeof CategoryCategoryIdRoute
  '/pages/$pageId': typeof PagesPageIdRoute
  '/products/$productId': typeof ProductsProductIdRoute
  '/orders/$orderId': typeof AccountOrdersOrderIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AccountRouteWithChildren
  '/checkout': typeof CheckoutRoute
  '/login': typeof LoginRoute
  '/account': typeof AccountAccountRoute
  '/address': typeof AccountAddressRoute
  '/order-history': typeof AccountOrderHistoryRoute
  '/wishlist': typeof AccountWishlistRoute
  '/category/$categoryId': typeof CategoryCategoryIdRoute
  '/pages/$pageId': typeof PagesPageIdRoute
  '/products/$productId': typeof ProductsProductIdRoute
  '/orders/$orderId': typeof AccountOrdersOrderIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_account': typeof AccountRouteWithChildren
  '/checkout': typeof CheckoutRoute
  '/login': typeof LoginRoute
  '/_account/account': typeof AccountAccountRoute
  '/_account/address': typeof AccountAddressRoute
  '/_account/order-history': typeof AccountOrderHistoryRoute
  '/_account/wishlist': typeof AccountWishlistRoute
  '/category/$categoryId': typeof CategoryCategoryIdRoute
  '/pages/$pageId': typeof PagesPageIdRoute
  '/products/$productId': typeof ProductsProductIdRoute
  '/_account/orders/$orderId': typeof AccountOrdersOrderIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/checkout'
    | '/login'
    | '/account'
    | '/address'
    | '/order-history'
    | '/wishlist'
    | '/category/$categoryId'
    | '/pages/$pageId'
    | '/products/$productId'
    | '/orders/$orderId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/checkout'
    | '/login'
    | '/account'
    | '/address'
    | '/order-history'
    | '/wishlist'
    | '/category/$categoryId'
    | '/pages/$pageId'
    | '/products/$productId'
    | '/orders/$orderId'
  id:
    | '__root__'
    | '/'
    | '/_account'
    | '/checkout'
    | '/login'
    | '/_account/account'
    | '/_account/address'
    | '/_account/order-history'
    | '/_account/wishlist'
    | '/category/$categoryId'
    | '/pages/$pageId'
    | '/products/$productId'
    | '/_account/orders/$orderId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AccountRoute: typeof AccountRouteWithChildren
  CheckoutRoute: typeof CheckoutRoute
  LoginRoute: typeof LoginRoute
  CategoryCategoryIdRoute: typeof CategoryCategoryIdRoute
  PagesPageIdRoute: typeof PagesPageIdRoute
  ProductsProductIdRoute: typeof ProductsProductIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AccountRoute: AccountRouteWithChildren,
  CheckoutRoute: CheckoutRoute,
  LoginRoute: LoginRoute,
  CategoryCategoryIdRoute: CategoryCategoryIdRoute,
  PagesPageIdRoute: PagesPageIdRoute,
  ProductsProductIdRoute: ProductsProductIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_account",
        "/checkout",
        "/login",
        "/category/$categoryId",
        "/pages/$pageId",
        "/products/$productId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_account": {
      "filePath": "_account.tsx",
      "children": [
        "/_account/account",
        "/_account/address",
        "/_account/order-history",
        "/_account/wishlist",
        "/_account/orders/$orderId"
      ]
    },
    "/checkout": {
      "filePath": "checkout.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_account/account": {
      "filePath": "_account/account.tsx",
      "parent": "/_account"
    },
    "/_account/address": {
      "filePath": "_account/address.tsx",
      "parent": "/_account"
    },
    "/_account/order-history": {
      "filePath": "_account/order-history.tsx",
      "parent": "/_account"
    },
    "/_account/wishlist": {
      "filePath": "_account/wishlist.tsx",
      "parent": "/_account"
    },
    "/category/$categoryId": {
      "filePath": "category/$categoryId.tsx"
    },
    "/pages/$pageId": {
      "filePath": "pages/$pageId.tsx"
    },
    "/products/$productId": {
      "filePath": "products/$productId.tsx"
    },
    "/_account/orders/$orderId": {
      "filePath": "_account/orders/$orderId.tsx",
      "parent": "/_account"
    }
  }
}
ROUTE_MANIFEST_END */
